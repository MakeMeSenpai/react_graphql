{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aspin25/Coding/Term 9/react_graphql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _taggedTemplateLiteral from\"/Users/aspin25/Coding/Term 9/react_graphql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _asyncToGenerator from\"/Users/aspin25/Coding/Term 9/react_graphql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/aspin25/Coding/Term 9/react_graphql/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import{useState}from'react';import{gql}from'@apollo/client';import{client}from'../index';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Weather(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),zip=_useState2[0],setZip=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"Weather\",children:[weather?/*#__PURE__*/_jsx(\"h1\",{children:weather.data.getWeather.temperature}):null,/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();getWeather();},children:[/*#__PURE__*/_jsx(\"input\",{value:zip,onChange:function onChange(e){return setZip(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})]});function getWeather(){return _getWeather.apply(this,arguments);}function _getWeather(){_getWeather=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return client.query({query:gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n              query {\\n                getWeather(zip:\",\") {\\n                  temperature\\n                  description\\n                }\\n              }\\n            \"])),zip)});case 3:json=_context.sent;setWeather(json);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return _getWeather.apply(this,arguments);}}export default Weather;","map":{"version":3,"sources":["/Users/aspin25/Coding/Term 9/react_graphql/src/Weather/weather.js"],"names":["useState","gql","client","Weather","zip","setZip","weather","setWeather","data","getWeather","temperature","e","preventDefault","target","value","query","json","console","log","message"],"mappings":"qqBAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,GAAT,KAAoB,gBAApB,CACA,OAASC,MAAT,KAAuB,UAAvB,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,eACSH,QAAQ,CAAC,EAAD,CADjB,wCACPI,GADO,eACFC,MADE,8BAEiBL,QAAQ,CAAC,IAAD,CAFzB,yCAEPM,OAFO,eAEEC,UAFF,eAIf,mBACI,aAAK,SAAS,CAAC,SAAf,WAEKD,OAAO,cAAG,oBACRA,OAAO,CAACE,IAAR,CAAaC,UAAb,CAAwBC,WADhB,EAAH,CAED,IAJX,cAMI,cAAM,QAAQ,CAAE,kBAACC,CAAD,CAAO,CACnBA,CAAC,CAACC,cAAF,GACAH,UAAU,GAAG,CAFjB,wBAGI,cACI,KAAK,CAAEL,GADX,CAEI,QAAQ,CAAE,kBAACO,CAAD,QAAON,CAAAA,MAAM,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb,EAFd,EAHJ,cAOI,eAAQ,IAAI,CAAC,QAAb,oBAPJ,GANJ,GADJ,CAJe,QAuBAL,CAAAA,UAvBA,wIAuBf,kLAEyBP,CAAAA,MAAM,CAACa,KAAP,CAAa,CAC9BA,KAAK,CAAEd,GAAF,+OAEgBG,GAFhB,CADyB,CAAb,CAFzB,QAEYY,IAFZ,eAYMT,UAAU,CAACS,IAAD,CAAV,CAZN,+EAcMC,OAAO,CAACC,GAAR,CAAY,YAAIC,OAAhB,EAdN,oEAvBe,6CAwChB,CAEH,cAAehB,CAAAA,OAAf","sourcesContent":["import { useState } from 'react'\nimport { gql } from '@apollo/client'\nimport { client } from '../index'\n\nfunction Weather() {\n    const [ zip, setZip ] = useState('')\n    const [ weather, setWeather ] = useState(null)\n  \n    return (\n        <div className=\"Weather\">\n\n            {weather ? <h1>\n              {weather.data.getWeather.temperature}\n            </h1>: null}\n\n            <form onSubmit={(e) => {\n                e.preventDefault()\n                getWeather()}}>\n                <input \n                    value={zip}\n                    onChange={(e) => setZip(e.target.value)}\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n\n    async function getWeather() {\n        try {\n          const json = await client.query({\n            query: gql`\n              query {\n                getWeather(zip:${zip}) {\n                  temperature\n                  description\n                }\n              }\n            `\n          })\n          setWeather(json)\n        } catch(err) {\n          console.log(err.message)\n        }\n      }\n  }\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}